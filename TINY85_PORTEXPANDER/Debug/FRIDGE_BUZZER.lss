
FRIDGE_BUZZER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000079c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000079c  00000830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800070  00800070  00000840  2**0
                  ALLOC
  3 .stab         000016b0  00000000  00000000  00000840  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000598  00000000  00000000  00001ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00002488  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000050  00000000  00000000  000024b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001002  00000000  00000000  00002507  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000186  00000000  00000000  00003509  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000242  00000000  00000000  0000368f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000c4  00000000  00000000  000038d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000001c9  00000000  00000000  00003998  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000038b  00000000  00000000  00003b61  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000040  00000000  00000000  00003eec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	29 c0       	rjmp	.+82     	; 0x68 <__vector_10>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	ec e9       	ldi	r30, 0x9C	; 156
  32:	f7 e0       	ldi	r31, 0x07	; 7
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a0 37       	cpi	r26, 0x70	; 112
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	a0 e7       	ldi	r26, 0x70	; 112
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a3 37       	cpi	r26, 0x73	; 115
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	0d d2       	rcall	.+1050   	; 0x46c <main>
  52:	a2 c3       	rjmp	.+1860   	; 0x798 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <init_TIMER0>:



void init_TIMER0( void )
{
	TCCR0A = 0x02; // CTC (clear timer on compare match) mode only WGM01 is set --> TOP = OCRA, TOV=0xFF (overflow)
  56:	82 e0       	ldi	r24, 0x02	; 2
  58:	8a bd       	out	0x2a, r24	; 42
	TCCR0B = 0x03; // CS01 + CS00 is set prescaler = 64 --> F_CPU/64 = 125 kHz
  5a:	83 e0       	ldi	r24, 0x03	; 3
  5c:	83 bf       	out	0x33, r24	; 51
	OCR0A = 125; // --> 1 kHz --> 1ms timebase for output compare interrupt
  5e:	8d e7       	ldi	r24, 0x7D	; 125
  60:	89 bd       	out	0x29, r24	; 41
	TIMSK = 0x10; // Output compare match A interrupt enable is set
  62:	80 e1       	ldi	r24, 0x10	; 16
  64:	89 bf       	out	0x39, r24	; 57
  66:	08 95       	ret

00000068 <__vector_10>:
volatile unsigned int tic_time_1000ms = 0 , tic_time_10ms = 0;


// ISR is executed every 1ms 
ISR(TIMER0_COMPA_vect)
{
  68:	1f 92       	push	r1
  6a:	0f 92       	push	r0
  6c:	0f b6       	in	r0, 0x3f	; 63
  6e:	0f 92       	push	r0
  70:	11 24       	eor	r1, r1
  72:	2f 93       	push	r18
  74:	8f 93       	push	r24
  76:	9f 93       	push	r25
	
	if( !tb_1000ms_flag )tic_time_1000ms++;
  78:	80 91 72 00 	lds	r24, 0x0072
  7c:	81 11       	cpse	r24, r1
  7e:	09 c0       	rjmp	.+18     	; 0x92 <__vector_10+0x2a>
  80:	80 91 70 00 	lds	r24, 0x0070
  84:	90 91 71 00 	lds	r25, 0x0071
  88:	01 96       	adiw	r24, 0x01	; 1
  8a:	90 93 71 00 	sts	0x0071, r25
  8e:	80 93 70 00 	sts	0x0070, r24
	if ( tic_time_1000ms > 1000 )
  92:	80 91 70 00 	lds	r24, 0x0070
  96:	90 91 71 00 	lds	r25, 0x0071
  9a:	89 3e       	cpi	r24, 0xE9	; 233
  9c:	93 40       	sbci	r25, 0x03	; 3
  9e:	18 f0       	brcs	.+6      	; 0xa6 <__vector_10+0x3e>
	{
		tb_1000ms_flag = 1;
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	80 93 72 00 	sts	0x0072, r24
	}

	
}
  a6:	9f 91       	pop	r25
  a8:	8f 91       	pop	r24
  aa:	2f 91       	pop	r18
  ac:	0f 90       	pop	r0
  ae:	0f be       	out	0x3f, r0	; 63
  b0:	0f 90       	pop	r0
  b2:	1f 90       	pop	r1
  b4:	18 95       	reti

000000b6 <init_IO>:

void init_IO(void)
{
	LED_DDR |= ( 1 << LED_PIN );
  b6:	bb 9a       	sbi	0x17, 3	; 23
	BUZZ_DDR |= ( 1 << BUZZ_PIN );
  b8:	bc 9a       	sbi	0x17, 4	; 23
  ba:	08 95       	ret

000000bc <custom_delay>:

void custom_delay( unsigned int delay )
{
	unsigned int cnt;
	
	for ( cnt = 0 ; cnt < delay ; cnt++ )
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	05 c0       	rjmp	.+10     	; 0xcc <custom_delay+0x10>
	{
		//_delay_us( 1 );
		asm volatile ("nop");
  c2:	00 00       	nop
		asm volatile ("nop");
  c4:	00 00       	nop
		asm volatile ("nop");
  c6:	00 00       	nop

void custom_delay( unsigned int delay )
{
	unsigned int cnt;
	
	for ( cnt = 0 ; cnt < delay ; cnt++ )
  c8:	2f 5f       	subi	r18, 0xFF	; 255
  ca:	3f 4f       	sbci	r19, 0xFF	; 255
  cc:	28 17       	cp	r18, r24
  ce:	39 07       	cpc	r19, r25
  d0:	c1 f7       	brne	.-16     	; 0xc2 <custom_delay+0x6>
		asm volatile ("nop");
		asm volatile ("nop");
	}
	
	
}
  d2:	08 95       	ret

000000d4 <play_note>:



void play_note( unsigned char note , unsigned char note_num , unsigned int duration_ms )
{
  d4:	cf 92       	push	r12
  d6:	df 92       	push	r13
  d8:	ef 92       	push	r14
  da:	ff 92       	push	r15
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
	unsigned int cnt, loops, delay_time=1000;
	// calculation: 300 * 1885/ desired frq = delay_time
	switch( note_num )
  e2:	61 30       	cpi	r22, 0x01	; 1
  e4:	61 f4       	brne	.+24     	; 0xfe <play_note+0x2a>
  e6:	81 56       	subi	r24, 0x61	; 97
  e8:	88 30       	cpi	r24, 0x08	; 8
  ea:	48 f4       	brcc	.+18     	; 0xfe <play_note+0x2a>
  ec:	e8 2f       	mov	r30, r24
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	ee 0f       	add	r30, r30
  f2:	ff 1f       	adc	r31, r31
  f4:	e0 5a       	subi	r30, 0xA0	; 160
  f6:	ff 4f       	sbci	r31, 0xFF	; 255
  f8:	c0 81       	ld	r28, Z
  fa:	d1 81       	ldd	r29, Z+1	; 0x01
  fc:	02 c0       	rjmp	.+4      	; 0x102 <play_note+0x2e>
  fe:	c8 ee       	ldi	r28, 0xE8	; 232
 100:	d3 e0       	ldi	r29, 0x03	; 3
		break;
			
			
	}

	loops = (unsigned int)( (double)duration_ms / ( (double)delay_time / 1000.0 ) );
 102:	ba 01       	movw	r22, r20
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	b9 d2       	rcall	.+1394   	; 0x67c <__floatunsisf>
 10a:	6b 01       	movw	r12, r22
 10c:	7c 01       	movw	r14, r24
 10e:	be 01       	movw	r22, r28
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	b3 d2       	rcall	.+1382   	; 0x67c <__floatunsisf>
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	4a e7       	ldi	r20, 0x7A	; 122
 11c:	54 e4       	ldi	r21, 0x44	; 68
 11e:	1a d2       	rcall	.+1076   	; 0x554 <__divsf3>
 120:	9b 01       	movw	r18, r22
 122:	ac 01       	movw	r20, r24
 124:	c7 01       	movw	r24, r14
 126:	b6 01       	movw	r22, r12
 128:	15 d2       	rcall	.+1066   	; 0x554 <__divsf3>
 12a:	7c d2       	rcall	.+1272   	; 0x624 <__fixunssfsi>
 12c:	6b 01       	movw	r12, r22
		
	for ( cnt = 0 ; cnt < loops ; cnt++ )
 12e:	e1 2c       	mov	r14, r1
 130:	f1 2c       	mov	r15, r1
	{
			
		custom_delay( delay_time );
			
		BUZZ_PORT ^= ( 1 << BUZZ_PIN );
 132:	10 e1       	ldi	r17, 0x10	; 16
			
	}

	loops = (unsigned int)( (double)duration_ms / ( (double)delay_time / 1000.0 ) );
		
	for ( cnt = 0 ; cnt < loops ; cnt++ )
 134:	08 c0       	rjmp	.+16     	; 0x146 <play_note+0x72>
	{
			
		custom_delay( delay_time );
 136:	ce 01       	movw	r24, r28
 138:	c1 df       	rcall	.-126    	; 0xbc <custom_delay>
			
		BUZZ_PORT ^= ( 1 << BUZZ_PIN );
 13a:	88 b3       	in	r24, 0x18	; 24
 13c:	81 27       	eor	r24, r17
 13e:	88 bb       	out	0x18, r24	; 24
			
	}

	loops = (unsigned int)( (double)duration_ms / ( (double)delay_time / 1000.0 ) );
		
	for ( cnt = 0 ; cnt < loops ; cnt++ )
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	e8 1a       	sub	r14, r24
 144:	f8 0a       	sbc	r15, r24
 146:	ec 14       	cp	r14, r12
 148:	fd 04       	cpc	r15, r13
 14a:	a9 f7       	brne	.-22     	; 0x136 <play_note+0x62>
			
		BUZZ_PORT ^= ( 1 << BUZZ_PIN );
			
	}

}
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	ff 90       	pop	r15
 154:	ef 90       	pop	r14
 156:	df 90       	pop	r13
 158:	cf 90       	pop	r12
 15a:	08 95       	ret

0000015c <haenschen_klein>:
void haenschen_klein(void)
{
	unsigned int takt = 300;
	unsigned int pause = 65000;
	
	play_note( 'g' , 1 , takt );
 15c:	4c e2       	ldi	r20, 0x2C	; 44
 15e:	51 e0       	ldi	r21, 0x01	; 1
 160:	61 e0       	ldi	r22, 0x01	; 1
 162:	87 e6       	ldi	r24, 0x67	; 103
 164:	b7 df       	rcall	.-146    	; 0xd4 <play_note>
	custom_delay(pause);
 166:	88 ee       	ldi	r24, 0xE8	; 232
 168:	9d ef       	ldi	r25, 0xFD	; 253
 16a:	a8 df       	rcall	.-176    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 16c:	4c e2       	ldi	r20, 0x2C	; 44
 16e:	51 e0       	ldi	r21, 0x01	; 1
 170:	61 e0       	ldi	r22, 0x01	; 1
 172:	85 e6       	ldi	r24, 0x65	; 101
 174:	af df       	rcall	.-162    	; 0xd4 <play_note>
	custom_delay(pause);
 176:	88 ee       	ldi	r24, 0xE8	; 232
 178:	9d ef       	ldi	r25, 0xFD	; 253
 17a:	a0 df       	rcall	.-192    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , 2*takt );
 17c:	48 e5       	ldi	r20, 0x58	; 88
 17e:	52 e0       	ldi	r21, 0x02	; 2
 180:	61 e0       	ldi	r22, 0x01	; 1
 182:	85 e6       	ldi	r24, 0x65	; 101
 184:	a7 df       	rcall	.-178    	; 0xd4 <play_note>
	custom_delay(pause);
 186:	88 ee       	ldi	r24, 0xE8	; 232
 188:	9d ef       	ldi	r25, 0xFD	; 253
 18a:	98 df       	rcall	.-208    	; 0xbc <custom_delay>
	
	play_note( 'f' , 1 , takt );
 18c:	4c e2       	ldi	r20, 0x2C	; 44
 18e:	51 e0       	ldi	r21, 0x01	; 1
 190:	61 e0       	ldi	r22, 0x01	; 1
 192:	86 e6       	ldi	r24, 0x66	; 102
 194:	9f df       	rcall	.-194    	; 0xd4 <play_note>
	custom_delay(pause);
 196:	88 ee       	ldi	r24, 0xE8	; 232
 198:	9d ef       	ldi	r25, 0xFD	; 253
 19a:	90 df       	rcall	.-224    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 19c:	4c e2       	ldi	r20, 0x2C	; 44
 19e:	51 e0       	ldi	r21, 0x01	; 1
 1a0:	61 e0       	ldi	r22, 0x01	; 1
 1a2:	84 e6       	ldi	r24, 0x64	; 100
 1a4:	97 df       	rcall	.-210    	; 0xd4 <play_note>
	custom_delay(pause);
 1a6:	88 ee       	ldi	r24, 0xE8	; 232
 1a8:	9d ef       	ldi	r25, 0xFD	; 253
 1aa:	88 df       	rcall	.-240    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , 2*takt );
 1ac:	48 e5       	ldi	r20, 0x58	; 88
 1ae:	52 e0       	ldi	r21, 0x02	; 2
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	84 e6       	ldi	r24, 0x64	; 100
 1b4:	8f df       	rcall	.-226    	; 0xd4 <play_note>
	custom_delay(pause);
 1b6:	88 ee       	ldi	r24, 0xE8	; 232
 1b8:	9d ef       	ldi	r25, 0xFD	; 253
 1ba:	80 df       	rcall	.-256    	; 0xbc <custom_delay>
	
	play_note( 'c' , 1 , takt );
 1bc:	4c e2       	ldi	r20, 0x2C	; 44
 1be:	51 e0       	ldi	r21, 0x01	; 1
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	83 e6       	ldi	r24, 0x63	; 99
 1c4:	87 df       	rcall	.-242    	; 0xd4 <play_note>
	custom_delay(pause);
 1c6:	88 ee       	ldi	r24, 0xE8	; 232
 1c8:	9d ef       	ldi	r25, 0xFD	; 253
 1ca:	78 df       	rcall	.-272    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 1cc:	4c e2       	ldi	r20, 0x2C	; 44
 1ce:	51 e0       	ldi	r21, 0x01	; 1
 1d0:	61 e0       	ldi	r22, 0x01	; 1
 1d2:	84 e6       	ldi	r24, 0x64	; 100
 1d4:	7f df       	rcall	.-258    	; 0xd4 <play_note>
	custom_delay(pause);
 1d6:	88 ee       	ldi	r24, 0xE8	; 232
 1d8:	9d ef       	ldi	r25, 0xFD	; 253
 1da:	70 df       	rcall	.-288    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 1dc:	4c e2       	ldi	r20, 0x2C	; 44
 1de:	51 e0       	ldi	r21, 0x01	; 1
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	85 e6       	ldi	r24, 0x65	; 101
 1e4:	77 df       	rcall	.-274    	; 0xd4 <play_note>
	custom_delay(pause);
 1e6:	88 ee       	ldi	r24, 0xE8	; 232
 1e8:	9d ef       	ldi	r25, 0xFD	; 253
 1ea:	68 df       	rcall	.-304    	; 0xbc <custom_delay>
	play_note( 'f' , 1 , takt );
 1ec:	4c e2       	ldi	r20, 0x2C	; 44
 1ee:	51 e0       	ldi	r21, 0x01	; 1
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	86 e6       	ldi	r24, 0x66	; 102
 1f4:	6f df       	rcall	.-290    	; 0xd4 <play_note>
	custom_delay(pause);
 1f6:	88 ee       	ldi	r24, 0xE8	; 232
 1f8:	9d ef       	ldi	r25, 0xFD	; 253
 1fa:	60 df       	rcall	.-320    	; 0xbc <custom_delay>
	
	play_note( 'g' , 1 , takt );
 1fc:	4c e2       	ldi	r20, 0x2C	; 44
 1fe:	51 e0       	ldi	r21, 0x01	; 1
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	87 e6       	ldi	r24, 0x67	; 103
 204:	67 df       	rcall	.-306    	; 0xd4 <play_note>
	custom_delay(pause);
 206:	88 ee       	ldi	r24, 0xE8	; 232
 208:	9d ef       	ldi	r25, 0xFD	; 253
 20a:	58 df       	rcall	.-336    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , takt );
 20c:	4c e2       	ldi	r20, 0x2C	; 44
 20e:	51 e0       	ldi	r21, 0x01	; 1
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	87 e6       	ldi	r24, 0x67	; 103
 214:	5f df       	rcall	.-322    	; 0xd4 <play_note>
	custom_delay(pause);
 216:	88 ee       	ldi	r24, 0xE8	; 232
 218:	9d ef       	ldi	r25, 0xFD	; 253
 21a:	50 df       	rcall	.-352    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , 2*takt );
 21c:	48 e5       	ldi	r20, 0x58	; 88
 21e:	52 e0       	ldi	r21, 0x02	; 2
 220:	61 e0       	ldi	r22, 0x01	; 1
 222:	87 e6       	ldi	r24, 0x67	; 103
 224:	57 df       	rcall	.-338    	; 0xd4 <play_note>
	custom_delay(pause);
 226:	88 ee       	ldi	r24, 0xE8	; 232
 228:	9d ef       	ldi	r25, 0xFD	; 253
 22a:	48 df       	rcall	.-368    	; 0xbc <custom_delay>
	
	
	
	play_note( 'g' , 1 , takt );
 22c:	4c e2       	ldi	r20, 0x2C	; 44
 22e:	51 e0       	ldi	r21, 0x01	; 1
 230:	61 e0       	ldi	r22, 0x01	; 1
 232:	87 e6       	ldi	r24, 0x67	; 103
 234:	4f df       	rcall	.-354    	; 0xd4 <play_note>
	custom_delay(pause);
 236:	88 ee       	ldi	r24, 0xE8	; 232
 238:	9d ef       	ldi	r25, 0xFD	; 253
 23a:	40 df       	rcall	.-384    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 23c:	4c e2       	ldi	r20, 0x2C	; 44
 23e:	51 e0       	ldi	r21, 0x01	; 1
 240:	61 e0       	ldi	r22, 0x01	; 1
 242:	85 e6       	ldi	r24, 0x65	; 101
 244:	47 df       	rcall	.-370    	; 0xd4 <play_note>
	custom_delay(pause);
 246:	88 ee       	ldi	r24, 0xE8	; 232
 248:	9d ef       	ldi	r25, 0xFD	; 253
 24a:	38 df       	rcall	.-400    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , 2*takt );
 24c:	48 e5       	ldi	r20, 0x58	; 88
 24e:	52 e0       	ldi	r21, 0x02	; 2
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	85 e6       	ldi	r24, 0x65	; 101
 254:	3f df       	rcall	.-386    	; 0xd4 <play_note>
	custom_delay(pause);
 256:	88 ee       	ldi	r24, 0xE8	; 232
 258:	9d ef       	ldi	r25, 0xFD	; 253
 25a:	30 df       	rcall	.-416    	; 0xbc <custom_delay>
	
	play_note( 'f' , 1 , takt );
 25c:	4c e2       	ldi	r20, 0x2C	; 44
 25e:	51 e0       	ldi	r21, 0x01	; 1
 260:	61 e0       	ldi	r22, 0x01	; 1
 262:	86 e6       	ldi	r24, 0x66	; 102
 264:	37 df       	rcall	.-402    	; 0xd4 <play_note>
	custom_delay(pause);
 266:	88 ee       	ldi	r24, 0xE8	; 232
 268:	9d ef       	ldi	r25, 0xFD	; 253
 26a:	28 df       	rcall	.-432    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 26c:	4c e2       	ldi	r20, 0x2C	; 44
 26e:	51 e0       	ldi	r21, 0x01	; 1
 270:	61 e0       	ldi	r22, 0x01	; 1
 272:	84 e6       	ldi	r24, 0x64	; 100
 274:	2f df       	rcall	.-418    	; 0xd4 <play_note>
	custom_delay(pause);
 276:	88 ee       	ldi	r24, 0xE8	; 232
 278:	9d ef       	ldi	r25, 0xFD	; 253
 27a:	20 df       	rcall	.-448    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , 2*takt );
 27c:	48 e5       	ldi	r20, 0x58	; 88
 27e:	52 e0       	ldi	r21, 0x02	; 2
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	84 e6       	ldi	r24, 0x64	; 100
 284:	27 df       	rcall	.-434    	; 0xd4 <play_note>
	custom_delay(pause);
 286:	88 ee       	ldi	r24, 0xE8	; 232
 288:	9d ef       	ldi	r25, 0xFD	; 253
 28a:	18 df       	rcall	.-464    	; 0xbc <custom_delay>
	
	play_note( 'c' , 1 , takt );
 28c:	4c e2       	ldi	r20, 0x2C	; 44
 28e:	51 e0       	ldi	r21, 0x01	; 1
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	83 e6       	ldi	r24, 0x63	; 99
 294:	1f df       	rcall	.-450    	; 0xd4 <play_note>
	custom_delay(pause);
 296:	88 ee       	ldi	r24, 0xE8	; 232
 298:	9d ef       	ldi	r25, 0xFD	; 253
 29a:	10 df       	rcall	.-480    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 29c:	4c e2       	ldi	r20, 0x2C	; 44
 29e:	51 e0       	ldi	r21, 0x01	; 1
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	85 e6       	ldi	r24, 0x65	; 101
 2a4:	17 df       	rcall	.-466    	; 0xd4 <play_note>
	custom_delay(pause);
 2a6:	88 ee       	ldi	r24, 0xE8	; 232
 2a8:	9d ef       	ldi	r25, 0xFD	; 253
 2aa:	08 df       	rcall	.-496    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , takt );
 2ac:	4c e2       	ldi	r20, 0x2C	; 44
 2ae:	51 e0       	ldi	r21, 0x01	; 1
 2b0:	61 e0       	ldi	r22, 0x01	; 1
 2b2:	87 e6       	ldi	r24, 0x67	; 103
 2b4:	0f df       	rcall	.-482    	; 0xd4 <play_note>
	custom_delay(pause);
 2b6:	88 ee       	ldi	r24, 0xE8	; 232
 2b8:	9d ef       	ldi	r25, 0xFD	; 253
 2ba:	00 df       	rcall	.-512    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , takt );
 2bc:	4c e2       	ldi	r20, 0x2C	; 44
 2be:	51 e0       	ldi	r21, 0x01	; 1
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	87 e6       	ldi	r24, 0x67	; 103
 2c4:	07 df       	rcall	.-498    	; 0xd4 <play_note>
	custom_delay(pause);
 2c6:	88 ee       	ldi	r24, 0xE8	; 232
 2c8:	9d ef       	ldi	r25, 0xFD	; 253
 2ca:	f8 de       	rcall	.-528    	; 0xbc <custom_delay>
	
	play_note( 'c' , 1 , 4*takt );
 2cc:	40 eb       	ldi	r20, 0xB0	; 176
 2ce:	54 e0       	ldi	r21, 0x04	; 4
 2d0:	61 e0       	ldi	r22, 0x01	; 1
 2d2:	83 e6       	ldi	r24, 0x63	; 99
 2d4:	ff de       	rcall	.-514    	; 0xd4 <play_note>
	custom_delay(pause);
 2d6:	88 ee       	ldi	r24, 0xE8	; 232
 2d8:	9d ef       	ldi	r25, 0xFD	; 253
 2da:	f0 de       	rcall	.-544    	; 0xbc <custom_delay>
	
	
	
	play_note( 'd' , 1 , takt );
 2dc:	4c e2       	ldi	r20, 0x2C	; 44
 2de:	51 e0       	ldi	r21, 0x01	; 1
 2e0:	61 e0       	ldi	r22, 0x01	; 1
 2e2:	84 e6       	ldi	r24, 0x64	; 100
 2e4:	f7 de       	rcall	.-530    	; 0xd4 <play_note>
	custom_delay(pause);
 2e6:	88 ee       	ldi	r24, 0xE8	; 232
 2e8:	9d ef       	ldi	r25, 0xFD	; 253
 2ea:	e8 de       	rcall	.-560    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 2ec:	4c e2       	ldi	r20, 0x2C	; 44
 2ee:	51 e0       	ldi	r21, 0x01	; 1
 2f0:	61 e0       	ldi	r22, 0x01	; 1
 2f2:	84 e6       	ldi	r24, 0x64	; 100
 2f4:	ef de       	rcall	.-546    	; 0xd4 <play_note>
	custom_delay(pause);
 2f6:	88 ee       	ldi	r24, 0xE8	; 232
 2f8:	9d ef       	ldi	r25, 0xFD	; 253
 2fa:	e0 de       	rcall	.-576    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 2fc:	4c e2       	ldi	r20, 0x2C	; 44
 2fe:	51 e0       	ldi	r21, 0x01	; 1
 300:	61 e0       	ldi	r22, 0x01	; 1
 302:	84 e6       	ldi	r24, 0x64	; 100
 304:	e7 de       	rcall	.-562    	; 0xd4 <play_note>
	custom_delay(pause);
 306:	88 ee       	ldi	r24, 0xE8	; 232
 308:	9d ef       	ldi	r25, 0xFD	; 253
 30a:	d8 de       	rcall	.-592    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 30c:	4c e2       	ldi	r20, 0x2C	; 44
 30e:	51 e0       	ldi	r21, 0x01	; 1
 310:	61 e0       	ldi	r22, 0x01	; 1
 312:	84 e6       	ldi	r24, 0x64	; 100
 314:	df de       	rcall	.-578    	; 0xd4 <play_note>
	custom_delay(pause);
 316:	88 ee       	ldi	r24, 0xE8	; 232
 318:	9d ef       	ldi	r25, 0xFD	; 253
 31a:	d0 de       	rcall	.-608    	; 0xbc <custom_delay>
	
	play_note( 'd' , 1 , takt );
 31c:	4c e2       	ldi	r20, 0x2C	; 44
 31e:	51 e0       	ldi	r21, 0x01	; 1
 320:	61 e0       	ldi	r22, 0x01	; 1
 322:	84 e6       	ldi	r24, 0x64	; 100
 324:	d7 de       	rcall	.-594    	; 0xd4 <play_note>
	custom_delay(pause);
 326:	88 ee       	ldi	r24, 0xE8	; 232
 328:	9d ef       	ldi	r25, 0xFD	; 253
 32a:	c8 de       	rcall	.-624    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 32c:	4c e2       	ldi	r20, 0x2C	; 44
 32e:	51 e0       	ldi	r21, 0x01	; 1
 330:	61 e0       	ldi	r22, 0x01	; 1
 332:	85 e6       	ldi	r24, 0x65	; 101
 334:	cf de       	rcall	.-610    	; 0xd4 <play_note>
	custom_delay(pause);
 336:	88 ee       	ldi	r24, 0xE8	; 232
 338:	9d ef       	ldi	r25, 0xFD	; 253
 33a:	c0 de       	rcall	.-640    	; 0xbc <custom_delay>
	play_note( 'f' , 1 , 2*takt );
 33c:	48 e5       	ldi	r20, 0x58	; 88
 33e:	52 e0       	ldi	r21, 0x02	; 2
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	86 e6       	ldi	r24, 0x66	; 102
 344:	c7 de       	rcall	.-626    	; 0xd4 <play_note>
	custom_delay(pause);
 346:	88 ee       	ldi	r24, 0xE8	; 232
 348:	9d ef       	ldi	r25, 0xFD	; 253
 34a:	b8 de       	rcall	.-656    	; 0xbc <custom_delay>
	
	play_note( 'e' , 1 , takt );
 34c:	4c e2       	ldi	r20, 0x2C	; 44
 34e:	51 e0       	ldi	r21, 0x01	; 1
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	85 e6       	ldi	r24, 0x65	; 101
 354:	bf de       	rcall	.-642    	; 0xd4 <play_note>
	custom_delay(pause);
 356:	88 ee       	ldi	r24, 0xE8	; 232
 358:	9d ef       	ldi	r25, 0xFD	; 253
 35a:	b0 de       	rcall	.-672    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 35c:	4c e2       	ldi	r20, 0x2C	; 44
 35e:	51 e0       	ldi	r21, 0x01	; 1
 360:	61 e0       	ldi	r22, 0x01	; 1
 362:	85 e6       	ldi	r24, 0x65	; 101
 364:	b7 de       	rcall	.-658    	; 0xd4 <play_note>
	custom_delay(pause);
 366:	88 ee       	ldi	r24, 0xE8	; 232
 368:	9d ef       	ldi	r25, 0xFD	; 253
 36a:	a8 de       	rcall	.-688    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 36c:	4c e2       	ldi	r20, 0x2C	; 44
 36e:	51 e0       	ldi	r21, 0x01	; 1
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	85 e6       	ldi	r24, 0x65	; 101
 374:	af de       	rcall	.-674    	; 0xd4 <play_note>
	custom_delay(pause);
 376:	88 ee       	ldi	r24, 0xE8	; 232
 378:	9d ef       	ldi	r25, 0xFD	; 253
 37a:	a0 de       	rcall	.-704    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 37c:	4c e2       	ldi	r20, 0x2C	; 44
 37e:	51 e0       	ldi	r21, 0x01	; 1
 380:	61 e0       	ldi	r22, 0x01	; 1
 382:	85 e6       	ldi	r24, 0x65	; 101
 384:	a7 de       	rcall	.-690    	; 0xd4 <play_note>
	custom_delay(pause);
 386:	88 ee       	ldi	r24, 0xE8	; 232
 388:	9d ef       	ldi	r25, 0xFD	; 253
 38a:	98 de       	rcall	.-720    	; 0xbc <custom_delay>
	
	play_note( 'e' , 1 , takt );
 38c:	4c e2       	ldi	r20, 0x2C	; 44
 38e:	51 e0       	ldi	r21, 0x01	; 1
 390:	61 e0       	ldi	r22, 0x01	; 1
 392:	85 e6       	ldi	r24, 0x65	; 101
 394:	9f de       	rcall	.-706    	; 0xd4 <play_note>
	custom_delay(pause);
 396:	88 ee       	ldi	r24, 0xE8	; 232
 398:	9d ef       	ldi	r25, 0xFD	; 253
 39a:	90 de       	rcall	.-736    	; 0xbc <custom_delay>
	play_note( 'f' , 1 , takt );
 39c:	4c e2       	ldi	r20, 0x2C	; 44
 39e:	51 e0       	ldi	r21, 0x01	; 1
 3a0:	61 e0       	ldi	r22, 0x01	; 1
 3a2:	86 e6       	ldi	r24, 0x66	; 102
 3a4:	97 de       	rcall	.-722    	; 0xd4 <play_note>
	custom_delay(pause);
 3a6:	88 ee       	ldi	r24, 0xE8	; 232
 3a8:	9d ef       	ldi	r25, 0xFD	; 253
 3aa:	88 de       	rcall	.-752    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , 2*takt );
 3ac:	48 e5       	ldi	r20, 0x58	; 88
 3ae:	52 e0       	ldi	r21, 0x02	; 2
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	87 e6       	ldi	r24, 0x67	; 103
 3b4:	8f de       	rcall	.-738    	; 0xd4 <play_note>
	custom_delay(pause);
 3b6:	88 ee       	ldi	r24, 0xE8	; 232
 3b8:	9d ef       	ldi	r25, 0xFD	; 253
 3ba:	80 de       	rcall	.-768    	; 0xbc <custom_delay>
	
	
	
	play_note( 'g' , 1 , takt );
 3bc:	4c e2       	ldi	r20, 0x2C	; 44
 3be:	51 e0       	ldi	r21, 0x01	; 1
 3c0:	61 e0       	ldi	r22, 0x01	; 1
 3c2:	87 e6       	ldi	r24, 0x67	; 103
 3c4:	87 de       	rcall	.-754    	; 0xd4 <play_note>
	custom_delay(pause);
 3c6:	88 ee       	ldi	r24, 0xE8	; 232
 3c8:	9d ef       	ldi	r25, 0xFD	; 253
 3ca:	78 de       	rcall	.-784    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 3cc:	4c e2       	ldi	r20, 0x2C	; 44
 3ce:	51 e0       	ldi	r21, 0x01	; 1
 3d0:	61 e0       	ldi	r22, 0x01	; 1
 3d2:	85 e6       	ldi	r24, 0x65	; 101
 3d4:	7f de       	rcall	.-770    	; 0xd4 <play_note>
	custom_delay(pause);
 3d6:	88 ee       	ldi	r24, 0xE8	; 232
 3d8:	9d ef       	ldi	r25, 0xFD	; 253
 3da:	70 de       	rcall	.-800    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , 2*takt );
 3dc:	48 e5       	ldi	r20, 0x58	; 88
 3de:	52 e0       	ldi	r21, 0x02	; 2
 3e0:	61 e0       	ldi	r22, 0x01	; 1
 3e2:	85 e6       	ldi	r24, 0x65	; 101
 3e4:	77 de       	rcall	.-786    	; 0xd4 <play_note>
	custom_delay(pause);
 3e6:	88 ee       	ldi	r24, 0xE8	; 232
 3e8:	9d ef       	ldi	r25, 0xFD	; 253
 3ea:	68 de       	rcall	.-816    	; 0xbc <custom_delay>
	
	play_note( 'f' , 1 , takt );
 3ec:	4c e2       	ldi	r20, 0x2C	; 44
 3ee:	51 e0       	ldi	r21, 0x01	; 1
 3f0:	61 e0       	ldi	r22, 0x01	; 1
 3f2:	86 e6       	ldi	r24, 0x66	; 102
 3f4:	6f de       	rcall	.-802    	; 0xd4 <play_note>
	custom_delay(pause);
 3f6:	88 ee       	ldi	r24, 0xE8	; 232
 3f8:	9d ef       	ldi	r25, 0xFD	; 253
 3fa:	60 de       	rcall	.-832    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , takt );
 3fc:	4c e2       	ldi	r20, 0x2C	; 44
 3fe:	51 e0       	ldi	r21, 0x01	; 1
 400:	61 e0       	ldi	r22, 0x01	; 1
 402:	84 e6       	ldi	r24, 0x64	; 100
 404:	67 de       	rcall	.-818    	; 0xd4 <play_note>
	custom_delay(pause);
 406:	88 ee       	ldi	r24, 0xE8	; 232
 408:	9d ef       	ldi	r25, 0xFD	; 253
 40a:	58 de       	rcall	.-848    	; 0xbc <custom_delay>
	play_note( 'd' , 1 , 2*takt );
 40c:	48 e5       	ldi	r20, 0x58	; 88
 40e:	52 e0       	ldi	r21, 0x02	; 2
 410:	61 e0       	ldi	r22, 0x01	; 1
 412:	84 e6       	ldi	r24, 0x64	; 100
 414:	5f de       	rcall	.-834    	; 0xd4 <play_note>
	custom_delay(pause);
 416:	88 ee       	ldi	r24, 0xE8	; 232
 418:	9d ef       	ldi	r25, 0xFD	; 253
 41a:	50 de       	rcall	.-864    	; 0xbc <custom_delay>
	
	play_note( 'c' , 1 , takt );
 41c:	4c e2       	ldi	r20, 0x2C	; 44
 41e:	51 e0       	ldi	r21, 0x01	; 1
 420:	61 e0       	ldi	r22, 0x01	; 1
 422:	83 e6       	ldi	r24, 0x63	; 99
 424:	57 de       	rcall	.-850    	; 0xd4 <play_note>
	custom_delay(pause);
 426:	88 ee       	ldi	r24, 0xE8	; 232
 428:	9d ef       	ldi	r25, 0xFD	; 253
 42a:	48 de       	rcall	.-880    	; 0xbc <custom_delay>
	play_note( 'e' , 1 , takt );
 42c:	4c e2       	ldi	r20, 0x2C	; 44
 42e:	51 e0       	ldi	r21, 0x01	; 1
 430:	61 e0       	ldi	r22, 0x01	; 1
 432:	85 e6       	ldi	r24, 0x65	; 101
 434:	4f de       	rcall	.-866    	; 0xd4 <play_note>
	custom_delay(pause);
 436:	88 ee       	ldi	r24, 0xE8	; 232
 438:	9d ef       	ldi	r25, 0xFD	; 253
 43a:	40 de       	rcall	.-896    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , takt );
 43c:	4c e2       	ldi	r20, 0x2C	; 44
 43e:	51 e0       	ldi	r21, 0x01	; 1
 440:	61 e0       	ldi	r22, 0x01	; 1
 442:	87 e6       	ldi	r24, 0x67	; 103
 444:	47 de       	rcall	.-882    	; 0xd4 <play_note>
	custom_delay(pause);
 446:	88 ee       	ldi	r24, 0xE8	; 232
 448:	9d ef       	ldi	r25, 0xFD	; 253
 44a:	38 de       	rcall	.-912    	; 0xbc <custom_delay>
	play_note( 'g' , 1 , takt );
 44c:	4c e2       	ldi	r20, 0x2C	; 44
 44e:	51 e0       	ldi	r21, 0x01	; 1
 450:	61 e0       	ldi	r22, 0x01	; 1
 452:	87 e6       	ldi	r24, 0x67	; 103
 454:	3f de       	rcall	.-898    	; 0xd4 <play_note>
	custom_delay(pause);
 456:	88 ee       	ldi	r24, 0xE8	; 232
 458:	9d ef       	ldi	r25, 0xFD	; 253
 45a:	30 de       	rcall	.-928    	; 0xbc <custom_delay>
	
	play_note( 'c' , 1 , 4*takt );
 45c:	40 eb       	ldi	r20, 0xB0	; 176
 45e:	54 e0       	ldi	r21, 0x04	; 4
 460:	61 e0       	ldi	r22, 0x01	; 1
 462:	83 e6       	ldi	r24, 0x63	; 99
 464:	37 de       	rcall	.-914    	; 0xd4 <play_note>
	custom_delay(pause);
 466:	88 ee       	ldi	r24, 0xE8	; 232
 468:	9d ef       	ldi	r25, 0xFD	; 253
 46a:	28 ce       	rjmp	.-944    	; 0xbc <custom_delay>

0000046c <main>:
}

int main(void)
{
	init_IO();
 46c:	24 de       	rcall	.-952    	; 0xb6 <init_IO>
	init_TIMER0();
 46e:	f3 dd       	rcall	.-1050   	; 0x56 <init_TIMER0>
	sei();
 470:	78 94       	sei
	
	unsigned int time = 0, treshold1 = 15, increment = 2, treshold2 = 45;
	unsigned int duration = 200;
	unsigned char lock1 = 0, lock2 = 0, lock3 = 0, lock4 = 0, lock5 = 0, lock6 = 0, lock7 = 0, lock8 = 0;
 472:	10 e0       	ldi	r17, 0x00	; 0
 474:	a1 2c       	mov	r10, r1
 476:	b1 2c       	mov	r11, r1
 478:	c1 2c       	mov	r12, r1
 47a:	d1 2c       	mov	r13, r1
 47c:	e1 2c       	mov	r14, r1
 47e:	f1 2c       	mov	r15, r1
 480:	00 e0       	ldi	r16, 0x00	; 0
{
	init_IO();
	init_TIMER0();
	sei();
	
	unsigned int time = 0, treshold1 = 15, increment = 2, treshold2 = 45;
 482:	c0 e0       	ldi	r28, 0x00	; 0
 484:	d0 e0       	ldi	r29, 0x00	; 0
	unsigned char lock1 = 0, lock2 = 0, lock3 = 0, lock4 = 0, lock5 = 0, lock6 = 0, lock7 = 0, lock8 = 0;
	
    while(1)
	{
		
		if( tb_1000ms_flag )
 486:	80 91 72 00 	lds	r24, 0x0072
 48a:	88 23       	and	r24, r24
 48c:	39 f0       	breq	.+14     	; 0x49c <main+0x30>
		{
			
			//LED_PORT ^= ( 1 << LED_PIN );
			time++;
 48e:	21 96       	adiw	r28, 0x01	; 1
			tic_time_1000ms = 0;
 490:	10 92 71 00 	sts	0x0071, r1
 494:	10 92 70 00 	sts	0x0070, r1
			tb_1000ms_flag=0;
 498:	10 92 72 00 	sts	0x0072, r1
			
			
		}
		
		
		if ( !lock1 && ( time == ( treshold1 + increment * 0 ) ) )
 49c:	01 11       	cpse	r16, r1
 49e:	09 c0       	rjmp	.+18     	; 0x4b2 <main+0x46>
 4a0:	cf 30       	cpi	r28, 0x0F	; 15
 4a2:	d1 05       	cpc	r29, r1
 4a4:	31 f4       	brne	.+12     	; 0x4b2 <main+0x46>
		{
			play_note( 'c' , 1 , duration );
 4a6:	48 ec       	ldi	r20, 0xC8	; 200
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	61 e0       	ldi	r22, 0x01	; 1
 4ac:	83 e6       	ldi	r24, 0x63	; 99
 4ae:	12 de       	rcall	.-988    	; 0xd4 <play_note>
			lock1 = 1;
 4b0:	01 e0       	ldi	r16, 0x01	; 1
		}
		
		if ( !lock2 && ( time == ( treshold1 + increment * 1 ) ) )
 4b2:	f1 10       	cpse	r15, r1
 4b4:	0a c0       	rjmp	.+20     	; 0x4ca <main+0x5e>
 4b6:	c1 31       	cpi	r28, 0x11	; 17
 4b8:	d1 05       	cpc	r29, r1
 4ba:	39 f4       	brne	.+14     	; 0x4ca <main+0x5e>
		{
			play_note( 'd' , 1 , duration );
 4bc:	48 ec       	ldi	r20, 0xC8	; 200
 4be:	50 e0       	ldi	r21, 0x00	; 0
 4c0:	61 e0       	ldi	r22, 0x01	; 1
 4c2:	84 e6       	ldi	r24, 0x64	; 100
 4c4:	07 de       	rcall	.-1010   	; 0xd4 <play_note>
			lock2 = 1;
 4c6:	ff 24       	eor	r15, r15
 4c8:	f3 94       	inc	r15
		}
		
		if ( !lock3 && ( time == ( treshold1 + increment * 2 ) ) )
 4ca:	e1 10       	cpse	r14, r1
 4cc:	0a c0       	rjmp	.+20     	; 0x4e2 <main+0x76>
 4ce:	c3 31       	cpi	r28, 0x13	; 19
 4d0:	d1 05       	cpc	r29, r1
 4d2:	39 f4       	brne	.+14     	; 0x4e2 <main+0x76>
		{
			play_note( 'e' , 1 , duration );
 4d4:	48 ec       	ldi	r20, 0xC8	; 200
 4d6:	50 e0       	ldi	r21, 0x00	; 0
 4d8:	61 e0       	ldi	r22, 0x01	; 1
 4da:	85 e6       	ldi	r24, 0x65	; 101
 4dc:	fb dd       	rcall	.-1034   	; 0xd4 <play_note>
			lock3 = 1;
 4de:	ee 24       	eor	r14, r14
 4e0:	e3 94       	inc	r14
		}
		
		if ( !lock4 && ( time == ( treshold1 + increment * 3 ) ) )
 4e2:	d1 10       	cpse	r13, r1
 4e4:	0a c0       	rjmp	.+20     	; 0x4fa <main+0x8e>
 4e6:	c5 31       	cpi	r28, 0x15	; 21
 4e8:	d1 05       	cpc	r29, r1
 4ea:	39 f4       	brne	.+14     	; 0x4fa <main+0x8e>
		{
			play_note( 'f' , 1 , duration );
 4ec:	48 ec       	ldi	r20, 0xC8	; 200
 4ee:	50 e0       	ldi	r21, 0x00	; 0
 4f0:	61 e0       	ldi	r22, 0x01	; 1
 4f2:	86 e6       	ldi	r24, 0x66	; 102
 4f4:	ef dd       	rcall	.-1058   	; 0xd4 <play_note>
			lock4 = 1;
 4f6:	dd 24       	eor	r13, r13
 4f8:	d3 94       	inc	r13
		}
		
		if ( !lock5 && ( time == ( treshold1 + increment * 4 ) ) )
 4fa:	c1 10       	cpse	r12, r1
 4fc:	0a c0       	rjmp	.+20     	; 0x512 <main+0xa6>
 4fe:	c7 31       	cpi	r28, 0x17	; 23
 500:	d1 05       	cpc	r29, r1
 502:	39 f4       	brne	.+14     	; 0x512 <main+0xa6>
		{
			play_note( 'g' , 1 , duration );
 504:	48 ec       	ldi	r20, 0xC8	; 200
 506:	50 e0       	ldi	r21, 0x00	; 0
 508:	61 e0       	ldi	r22, 0x01	; 1
 50a:	87 e6       	ldi	r24, 0x67	; 103
 50c:	e3 dd       	rcall	.-1082   	; 0xd4 <play_note>
			lock5 = 1;
 50e:	cc 24       	eor	r12, r12
 510:	c3 94       	inc	r12
		}
		
		if ( !lock6 && ( time == ( treshold1 + increment * 5 ) ) )
 512:	b1 10       	cpse	r11, r1
 514:	0a c0       	rjmp	.+20     	; 0x52a <main+0xbe>
 516:	c9 31       	cpi	r28, 0x19	; 25
 518:	d1 05       	cpc	r29, r1
 51a:	39 f4       	brne	.+14     	; 0x52a <main+0xbe>
		{
			play_note( 'a' , 1 , duration );
 51c:	48 ec       	ldi	r20, 0xC8	; 200
 51e:	50 e0       	ldi	r21, 0x00	; 0
 520:	61 e0       	ldi	r22, 0x01	; 1
 522:	81 e6       	ldi	r24, 0x61	; 97
 524:	d7 dd       	rcall	.-1106   	; 0xd4 <play_note>
			lock6 = 1;
 526:	bb 24       	eor	r11, r11
 528:	b3 94       	inc	r11
		}
		
		if ( !lock7 && ( time == ( treshold1 + increment * 6 ) ) )
 52a:	a1 10       	cpse	r10, r1
 52c:	0a c0       	rjmp	.+20     	; 0x542 <main+0xd6>
 52e:	cb 31       	cpi	r28, 0x1B	; 27
 530:	d1 05       	cpc	r29, r1
 532:	39 f4       	brne	.+14     	; 0x542 <main+0xd6>
		{
			play_note( 'h' , 1 , duration );
 534:	48 ec       	ldi	r20, 0xC8	; 200
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	61 e0       	ldi	r22, 0x01	; 1
 53a:	88 e6       	ldi	r24, 0x68	; 104
 53c:	cb dd       	rcall	.-1130   	; 0xd4 <play_note>
			lock7 = 1;
 53e:	aa 24       	eor	r10, r10
 540:	a3 94       	inc	r10
		}
		
		
		if ( !lock8 && ( time == treshold2 ) )
 542:	11 11       	cpse	r17, r1
 544:	a0 cf       	rjmp	.-192    	; 0x486 <main+0x1a>
 546:	cd 32       	cpi	r28, 0x2D	; 45
 548:	d1 05       	cpc	r29, r1
 54a:	09 f0       	breq	.+2      	; 0x54e <main+0xe2>
 54c:	9c cf       	rjmp	.-200    	; 0x486 <main+0x1a>
		{
			haenschen_klein();
 54e:	06 de       	rcall	.-1012   	; 0x15c <haenschen_klein>
			lock8 = 1;
 550:	11 e0       	ldi	r17, 0x01	; 1
 552:	99 cf       	rjmp	.-206    	; 0x486 <main+0x1a>

00000554 <__divsf3>:
 554:	0c d0       	rcall	.+24     	; 0x56e <__divsf3x>
 556:	e6 c0       	rjmp	.+460    	; 0x724 <__fp_round>
 558:	de d0       	rcall	.+444    	; 0x716 <__fp_pscB>
 55a:	40 f0       	brcs	.+16     	; 0x56c <__divsf3+0x18>
 55c:	d5 d0       	rcall	.+426    	; 0x708 <__fp_pscA>
 55e:	30 f0       	brcs	.+12     	; 0x56c <__divsf3+0x18>
 560:	21 f4       	brne	.+8      	; 0x56a <__divsf3+0x16>
 562:	5f 3f       	cpi	r21, 0xFF	; 255
 564:	19 f0       	breq	.+6      	; 0x56c <__divsf3+0x18>
 566:	c7 c0       	rjmp	.+398    	; 0x6f6 <__fp_inf>
 568:	51 11       	cpse	r21, r1
 56a:	10 c1       	rjmp	.+544    	; 0x78c <__fp_szero>
 56c:	ca c0       	rjmp	.+404    	; 0x702 <__fp_nan>

0000056e <__divsf3x>:
 56e:	eb d0       	rcall	.+470    	; 0x746 <__fp_split3>
 570:	98 f3       	brcs	.-26     	; 0x558 <__divsf3+0x4>

00000572 <__divsf3_pse>:
 572:	99 23       	and	r25, r25
 574:	c9 f3       	breq	.-14     	; 0x568 <__divsf3+0x14>
 576:	55 23       	and	r21, r21
 578:	b1 f3       	breq	.-20     	; 0x566 <__divsf3+0x12>
 57a:	95 1b       	sub	r25, r21
 57c:	55 0b       	sbc	r21, r21
 57e:	bb 27       	eor	r27, r27
 580:	aa 27       	eor	r26, r26
 582:	62 17       	cp	r22, r18
 584:	73 07       	cpc	r23, r19
 586:	84 07       	cpc	r24, r20
 588:	38 f0       	brcs	.+14     	; 0x598 <__divsf3_pse+0x26>
 58a:	9f 5f       	subi	r25, 0xFF	; 255
 58c:	5f 4f       	sbci	r21, 0xFF	; 255
 58e:	22 0f       	add	r18, r18
 590:	33 1f       	adc	r19, r19
 592:	44 1f       	adc	r20, r20
 594:	aa 1f       	adc	r26, r26
 596:	a9 f3       	breq	.-22     	; 0x582 <__divsf3_pse+0x10>
 598:	33 d0       	rcall	.+102    	; 0x600 <__divsf3_pse+0x8e>
 59a:	0e 2e       	mov	r0, r30
 59c:	3a f0       	brmi	.+14     	; 0x5ac <__divsf3_pse+0x3a>
 59e:	e0 e8       	ldi	r30, 0x80	; 128
 5a0:	30 d0       	rcall	.+96     	; 0x602 <__divsf3_pse+0x90>
 5a2:	91 50       	subi	r25, 0x01	; 1
 5a4:	50 40       	sbci	r21, 0x00	; 0
 5a6:	e6 95       	lsr	r30
 5a8:	00 1c       	adc	r0, r0
 5aa:	ca f7       	brpl	.-14     	; 0x59e <__divsf3_pse+0x2c>
 5ac:	29 d0       	rcall	.+82     	; 0x600 <__divsf3_pse+0x8e>
 5ae:	fe 2f       	mov	r31, r30
 5b0:	27 d0       	rcall	.+78     	; 0x600 <__divsf3_pse+0x8e>
 5b2:	66 0f       	add	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	bb 1f       	adc	r27, r27
 5ba:	26 17       	cp	r18, r22
 5bc:	37 07       	cpc	r19, r23
 5be:	48 07       	cpc	r20, r24
 5c0:	ab 07       	cpc	r26, r27
 5c2:	b0 e8       	ldi	r27, 0x80	; 128
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__divsf3_pse+0x56>
 5c6:	bb 0b       	sbc	r27, r27
 5c8:	80 2d       	mov	r24, r0
 5ca:	bf 01       	movw	r22, r30
 5cc:	ff 27       	eor	r31, r31
 5ce:	93 58       	subi	r25, 0x83	; 131
 5d0:	5f 4f       	sbci	r21, 0xFF	; 255
 5d2:	2a f0       	brmi	.+10     	; 0x5de <__divsf3_pse+0x6c>
 5d4:	9e 3f       	cpi	r25, 0xFE	; 254
 5d6:	51 05       	cpc	r21, r1
 5d8:	68 f0       	brcs	.+26     	; 0x5f4 <__divsf3_pse+0x82>
 5da:	8d c0       	rjmp	.+282    	; 0x6f6 <__fp_inf>
 5dc:	d7 c0       	rjmp	.+430    	; 0x78c <__fp_szero>
 5de:	5f 3f       	cpi	r21, 0xFF	; 255
 5e0:	ec f3       	brlt	.-6      	; 0x5dc <__divsf3_pse+0x6a>
 5e2:	98 3e       	cpi	r25, 0xE8	; 232
 5e4:	dc f3       	brlt	.-10     	; 0x5dc <__divsf3_pse+0x6a>
 5e6:	86 95       	lsr	r24
 5e8:	77 95       	ror	r23
 5ea:	67 95       	ror	r22
 5ec:	b7 95       	ror	r27
 5ee:	f7 95       	ror	r31
 5f0:	9f 5f       	subi	r25, 0xFF	; 255
 5f2:	c9 f7       	brne	.-14     	; 0x5e6 <__divsf3_pse+0x74>
 5f4:	88 0f       	add	r24, r24
 5f6:	91 1d       	adc	r25, r1
 5f8:	96 95       	lsr	r25
 5fa:	87 95       	ror	r24
 5fc:	97 f9       	bld	r25, 7
 5fe:	08 95       	ret
 600:	e1 e0       	ldi	r30, 0x01	; 1
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	bb 1f       	adc	r27, r27
 60a:	62 17       	cp	r22, r18
 60c:	73 07       	cpc	r23, r19
 60e:	84 07       	cpc	r24, r20
 610:	ba 07       	cpc	r27, r26
 612:	20 f0       	brcs	.+8      	; 0x61c <__divsf3_pse+0xaa>
 614:	62 1b       	sub	r22, r18
 616:	73 0b       	sbc	r23, r19
 618:	84 0b       	sbc	r24, r20
 61a:	ba 0b       	sbc	r27, r26
 61c:	ee 1f       	adc	r30, r30
 61e:	88 f7       	brcc	.-30     	; 0x602 <__divsf3_pse+0x90>
 620:	e0 95       	com	r30
 622:	08 95       	ret

00000624 <__fixunssfsi>:
 624:	98 d0       	rcall	.+304    	; 0x756 <__fp_splitA>
 626:	88 f0       	brcs	.+34     	; 0x64a <__fixunssfsi+0x26>
 628:	9f 57       	subi	r25, 0x7F	; 127
 62a:	90 f0       	brcs	.+36     	; 0x650 <__fixunssfsi+0x2c>
 62c:	b9 2f       	mov	r27, r25
 62e:	99 27       	eor	r25, r25
 630:	b7 51       	subi	r27, 0x17	; 23
 632:	a0 f0       	brcs	.+40     	; 0x65c <__fixunssfsi+0x38>
 634:	d1 f0       	breq	.+52     	; 0x66a <__fixunssfsi+0x46>
 636:	66 0f       	add	r22, r22
 638:	77 1f       	adc	r23, r23
 63a:	88 1f       	adc	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	1a f0       	brmi	.+6      	; 0x646 <__fixunssfsi+0x22>
 640:	ba 95       	dec	r27
 642:	c9 f7       	brne	.-14     	; 0x636 <__fixunssfsi+0x12>
 644:	12 c0       	rjmp	.+36     	; 0x66a <__fixunssfsi+0x46>
 646:	b1 30       	cpi	r27, 0x01	; 1
 648:	81 f0       	breq	.+32     	; 0x66a <__fixunssfsi+0x46>
 64a:	9f d0       	rcall	.+318    	; 0x78a <__fp_zero>
 64c:	b1 e0       	ldi	r27, 0x01	; 1
 64e:	08 95       	ret
 650:	9c c0       	rjmp	.+312    	; 0x78a <__fp_zero>
 652:	67 2f       	mov	r22, r23
 654:	78 2f       	mov	r23, r24
 656:	88 27       	eor	r24, r24
 658:	b8 5f       	subi	r27, 0xF8	; 248
 65a:	39 f0       	breq	.+14     	; 0x66a <__fixunssfsi+0x46>
 65c:	b9 3f       	cpi	r27, 0xF9	; 249
 65e:	cc f3       	brlt	.-14     	; 0x652 <__fixunssfsi+0x2e>
 660:	86 95       	lsr	r24
 662:	77 95       	ror	r23
 664:	67 95       	ror	r22
 666:	b3 95       	inc	r27
 668:	d9 f7       	brne	.-10     	; 0x660 <__fixunssfsi+0x3c>
 66a:	3e f4       	brtc	.+14     	; 0x67a <__fixunssfsi+0x56>
 66c:	90 95       	com	r25
 66e:	80 95       	com	r24
 670:	70 95       	com	r23
 672:	61 95       	neg	r22
 674:	7f 4f       	sbci	r23, 0xFF	; 255
 676:	8f 4f       	sbci	r24, 0xFF	; 255
 678:	9f 4f       	sbci	r25, 0xFF	; 255
 67a:	08 95       	ret

0000067c <__floatunsisf>:
 67c:	e8 94       	clt
 67e:	09 c0       	rjmp	.+18     	; 0x692 <__floatsisf+0x12>

00000680 <__floatsisf>:
 680:	97 fb       	bst	r25, 7
 682:	3e f4       	brtc	.+14     	; 0x692 <__floatsisf+0x12>
 684:	90 95       	com	r25
 686:	80 95       	com	r24
 688:	70 95       	com	r23
 68a:	61 95       	neg	r22
 68c:	7f 4f       	sbci	r23, 0xFF	; 255
 68e:	8f 4f       	sbci	r24, 0xFF	; 255
 690:	9f 4f       	sbci	r25, 0xFF	; 255
 692:	99 23       	and	r25, r25
 694:	a9 f0       	breq	.+42     	; 0x6c0 <__floatsisf+0x40>
 696:	f9 2f       	mov	r31, r25
 698:	96 e9       	ldi	r25, 0x96	; 150
 69a:	bb 27       	eor	r27, r27
 69c:	93 95       	inc	r25
 69e:	f6 95       	lsr	r31
 6a0:	87 95       	ror	r24
 6a2:	77 95       	ror	r23
 6a4:	67 95       	ror	r22
 6a6:	b7 95       	ror	r27
 6a8:	f1 11       	cpse	r31, r1
 6aa:	f8 cf       	rjmp	.-16     	; 0x69c <__floatsisf+0x1c>
 6ac:	fa f4       	brpl	.+62     	; 0x6ec <__floatsisf+0x6c>
 6ae:	bb 0f       	add	r27, r27
 6b0:	11 f4       	brne	.+4      	; 0x6b6 <__floatsisf+0x36>
 6b2:	60 ff       	sbrs	r22, 0
 6b4:	1b c0       	rjmp	.+54     	; 0x6ec <__floatsisf+0x6c>
 6b6:	6f 5f       	subi	r22, 0xFF	; 255
 6b8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ba:	8f 4f       	sbci	r24, 0xFF	; 255
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	16 c0       	rjmp	.+44     	; 0x6ec <__floatsisf+0x6c>
 6c0:	88 23       	and	r24, r24
 6c2:	11 f0       	breq	.+4      	; 0x6c8 <__floatsisf+0x48>
 6c4:	96 e9       	ldi	r25, 0x96	; 150
 6c6:	11 c0       	rjmp	.+34     	; 0x6ea <__floatsisf+0x6a>
 6c8:	77 23       	and	r23, r23
 6ca:	21 f0       	breq	.+8      	; 0x6d4 <__floatsisf+0x54>
 6cc:	9e e8       	ldi	r25, 0x8E	; 142
 6ce:	87 2f       	mov	r24, r23
 6d0:	76 2f       	mov	r23, r22
 6d2:	05 c0       	rjmp	.+10     	; 0x6de <__floatsisf+0x5e>
 6d4:	66 23       	and	r22, r22
 6d6:	71 f0       	breq	.+28     	; 0x6f4 <__floatsisf+0x74>
 6d8:	96 e8       	ldi	r25, 0x86	; 134
 6da:	86 2f       	mov	r24, r22
 6dc:	70 e0       	ldi	r23, 0x00	; 0
 6de:	60 e0       	ldi	r22, 0x00	; 0
 6e0:	2a f0       	brmi	.+10     	; 0x6ec <__floatsisf+0x6c>
 6e2:	9a 95       	dec	r25
 6e4:	66 0f       	add	r22, r22
 6e6:	77 1f       	adc	r23, r23
 6e8:	88 1f       	adc	r24, r24
 6ea:	da f7       	brpl	.-10     	; 0x6e2 <__floatsisf+0x62>
 6ec:	88 0f       	add	r24, r24
 6ee:	96 95       	lsr	r25
 6f0:	87 95       	ror	r24
 6f2:	97 f9       	bld	r25, 7
 6f4:	08 95       	ret

000006f6 <__fp_inf>:
 6f6:	97 f9       	bld	r25, 7
 6f8:	9f 67       	ori	r25, 0x7F	; 127
 6fa:	80 e8       	ldi	r24, 0x80	; 128
 6fc:	70 e0       	ldi	r23, 0x00	; 0
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	08 95       	ret

00000702 <__fp_nan>:
 702:	9f ef       	ldi	r25, 0xFF	; 255
 704:	80 ec       	ldi	r24, 0xC0	; 192
 706:	08 95       	ret

00000708 <__fp_pscA>:
 708:	00 24       	eor	r0, r0
 70a:	0a 94       	dec	r0
 70c:	16 16       	cp	r1, r22
 70e:	17 06       	cpc	r1, r23
 710:	18 06       	cpc	r1, r24
 712:	09 06       	cpc	r0, r25
 714:	08 95       	ret

00000716 <__fp_pscB>:
 716:	00 24       	eor	r0, r0
 718:	0a 94       	dec	r0
 71a:	12 16       	cp	r1, r18
 71c:	13 06       	cpc	r1, r19
 71e:	14 06       	cpc	r1, r20
 720:	05 06       	cpc	r0, r21
 722:	08 95       	ret

00000724 <__fp_round>:
 724:	09 2e       	mov	r0, r25
 726:	03 94       	inc	r0
 728:	00 0c       	add	r0, r0
 72a:	11 f4       	brne	.+4      	; 0x730 <__fp_round+0xc>
 72c:	88 23       	and	r24, r24
 72e:	52 f0       	brmi	.+20     	; 0x744 <__fp_round+0x20>
 730:	bb 0f       	add	r27, r27
 732:	40 f4       	brcc	.+16     	; 0x744 <__fp_round+0x20>
 734:	bf 2b       	or	r27, r31
 736:	11 f4       	brne	.+4      	; 0x73c <__fp_round+0x18>
 738:	60 ff       	sbrs	r22, 0
 73a:	04 c0       	rjmp	.+8      	; 0x744 <__fp_round+0x20>
 73c:	6f 5f       	subi	r22, 0xFF	; 255
 73e:	7f 4f       	sbci	r23, 0xFF	; 255
 740:	8f 4f       	sbci	r24, 0xFF	; 255
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	08 95       	ret

00000746 <__fp_split3>:
 746:	57 fd       	sbrc	r21, 7
 748:	90 58       	subi	r25, 0x80	; 128
 74a:	44 0f       	add	r20, r20
 74c:	55 1f       	adc	r21, r21
 74e:	59 f0       	breq	.+22     	; 0x766 <__fp_splitA+0x10>
 750:	5f 3f       	cpi	r21, 0xFF	; 255
 752:	71 f0       	breq	.+28     	; 0x770 <__fp_splitA+0x1a>
 754:	47 95       	ror	r20

00000756 <__fp_splitA>:
 756:	88 0f       	add	r24, r24
 758:	97 fb       	bst	r25, 7
 75a:	99 1f       	adc	r25, r25
 75c:	61 f0       	breq	.+24     	; 0x776 <__fp_splitA+0x20>
 75e:	9f 3f       	cpi	r25, 0xFF	; 255
 760:	79 f0       	breq	.+30     	; 0x780 <__fp_splitA+0x2a>
 762:	87 95       	ror	r24
 764:	08 95       	ret
 766:	12 16       	cp	r1, r18
 768:	13 06       	cpc	r1, r19
 76a:	14 06       	cpc	r1, r20
 76c:	55 1f       	adc	r21, r21
 76e:	f2 cf       	rjmp	.-28     	; 0x754 <__fp_split3+0xe>
 770:	46 95       	lsr	r20
 772:	f1 df       	rcall	.-30     	; 0x756 <__fp_splitA>
 774:	08 c0       	rjmp	.+16     	; 0x786 <__fp_splitA+0x30>
 776:	16 16       	cp	r1, r22
 778:	17 06       	cpc	r1, r23
 77a:	18 06       	cpc	r1, r24
 77c:	99 1f       	adc	r25, r25
 77e:	f1 cf       	rjmp	.-30     	; 0x762 <__fp_splitA+0xc>
 780:	86 95       	lsr	r24
 782:	71 05       	cpc	r23, r1
 784:	61 05       	cpc	r22, r1
 786:	08 94       	sec
 788:	08 95       	ret

0000078a <__fp_zero>:
 78a:	e8 94       	clt

0000078c <__fp_szero>:
 78c:	bb 27       	eor	r27, r27
 78e:	66 27       	eor	r22, r22
 790:	77 27       	eor	r23, r23
 792:	cb 01       	movw	r24, r22
 794:	97 f9       	bld	r25, 7
 796:	08 95       	ret

00000798 <_exit>:
 798:	f8 94       	cli

0000079a <__stop_program>:
 79a:	ff cf       	rjmp	.-2      	; 0x79a <__stop_program>
